/* eslint-disable @typescript-eslint/ban-ts-comment */
//! Do not edit this file manually, it is generate by `prisma repo generator`

import {
  PrismaClient,
  Prisma,
  Users,
  Categories,
  Articles,
} from '@prisma/client'
import _ from 'lodash'

// eslint-disable-next-line @typescript-eslint/no-explicit-any
export type AnyRecord = Record<string, any>

export type BaseOption<Include, Select> = {
  include?: Include
  select?: Select
}

export type Find<Select, Include, Cursor, Order, Distinct> = BaseOption<
  Include,
  Select
> & {
  cursor?: Cursor
  take?: number
  skip?: number
  orderBy?: Prisma.Enumerable<Order>
  distinct?: Distinct
}

export type CountArgs<Select, Cursor, Order, Distinct> = Omit<
  Find<Select, never, Cursor, Order, Distinct>,
  'include'
>

export type Aggregate<Cursor, Order, Distinct> = Omit<
  CountArgs<never, Cursor, Order, Distinct>,
  'select' | 'distinct'
>

export const prisma = new PrismaClient({
  log: ['error', 'info', 'query', 'warn'],
})

export const models = _.omit(prisma, [
  '$on',
  '$connect',
  '$disconnect',
  '$use',
  '$executeRaw',
  '$executeRawUnsafe',
  '$queryRaw',
  '$queryRawUnsafe',
  '$transaction',
])

export const MODELS_NAME = {
  USERS: 'users',
  CATEGORIES: 'categories',
  ARTICLES: 'articles',
} as const

// eslint-disable-next-line @typescript-eslint/ban-types
export type ModelStructure = {
  users: Users
  categories: Categories
  articles: Articles
}

export type ModelName = keyof ModelStructure

export type ModelScalarFields<T extends keyof ModelStructure> =
  Prisma.Enumerable<keyof ModelStructure[T]>

export type ModelDelegate =
  | Prisma.PrismaClientKnownRequestError
  | Prisma.PrismaClientKnownRequestError
  | undefined

export type ModelTypes<T = unknown> = {
  users: {
    Where: Prisma.UsersWhereInput
    Select: Prisma.UsersSelect
    Include: unknown
    Create: Prisma.UsersCreateInput | Prisma.UsersUncheckedCreateInput
    Update: Prisma.UsersUpdateInput | Prisma.UsersUncheckedUpdateInput
    Cursor: Prisma.UsersWhereUniqueInput
    Order: Prisma.UsersOrderByWithRelationInput
    Delegate: Prisma.UsersDelegate
    GroupBy: Prisma.UsersGroupByOutputType
    // @ts-ignore
    Return: Prisma.UsersGetPayload<T>
  }
  categories: {
    Where: Prisma.CategoriesWhereInput
    Select: Prisma.CategoriesSelect
    Include: Prisma.CategoriesInclude
    Create: Prisma.CategoriesCreateInput | Prisma.CategoriesUncheckedCreateInput
    Update: Prisma.CategoriesUpdateInput | Prisma.CategoriesUncheckedUpdateInput
    Cursor: unknown
    Order: Prisma.CategoriesOrderByWithRelationInput
    Delegate: Prisma.CategoriesDelegate
    GroupBy: Prisma.CategoriesGroupByOutputType
    // @ts-ignore
    Return: Prisma.CategoriesGetPayload<T>
  }
  articles: {
    Where: Prisma.ArticlesWhereInput
    Select: Prisma.ArticlesSelect
    Include: Prisma.ArticlesInclude
    Create: Prisma.ArticlesCreateInput | Prisma.ArticlesUncheckedCreateInput
    Update: Prisma.ArticlesUpdateInput | Prisma.ArticlesUncheckedUpdateInput
    Cursor: unknown
    Order: Prisma.ArticlesOrderByWithRelationInput
    Delegate: Prisma.ArticlesDelegate
    GroupBy: Prisma.ArticlesGroupByOutputType
    // @ts-ignore
    Return: Prisma.ArticlesGetPayload<T>
  }
}
